name: cpp-build
on: [push]

jobs:
  build-ubuntu:
    name: ${ { matrix.config.name } }
    runs-on: ${ { matrix.config.os } }
      strategy:
        fail-fast: false
        matrix:
          config:
          - {
              name: "Windows Latest MSVC", artifact: "Windows-MSVC.tar.xz",
              os: windows-latest,
              build_type: "Release", cc: "cl", cxx: "cl",
              environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
            }
          - {
              name: "Windows Latest MinGW", artifact: "Windows-MinGW.tar.xz",
              os: windows-latest,
              build_type: "Release", cc: "gcc", cxx: "g++"
            }
          - {
              name: "Ubuntu Latest GCC", artifact: "Linux.tar.xz",
              os: ubuntu-latest,
              build_type: "Release", cc: "gcc", cxx: "g++"
            }
          - {
              name: "macOS Latest Clang", artifact: "macOS.tar.xz",
              os: macos-latest,
              build_type: "Release", cc: "clang", cxx: "clang++"
            }

    steps:
      - uses: actions/checkout@v2
      - name: configure
        run: mkdir build && cd build && cmake -DCMAKE_CXX_FLAGS="-Werror" ..
      - name: build
        run: cmake --build build
      - name: test-run
        run: cd build && ./testProj
      - uses: actions/upload-artifact@v1
        with:
          name: buildFile
          path: build